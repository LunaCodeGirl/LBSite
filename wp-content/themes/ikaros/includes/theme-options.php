<?php

global $google_array;

$google_array = array(
  array('label' => 'Abel',/*Abel*/'value' => 'Abel'),
  array('label' => 'Abril Fatface',/*Abril Fatface*/'value' => 'Abril+Fatface'),
  array('label' => 'Aclonica',/*Aclonica*/'value' => 'Aclonica'),
  array('label' => 'Actor',/*Actor*/'value' => 'Actor'),
  array('label' => 'Adamina',/*Adamina*/'value' => 'Adamina'),
  array('label' => 'Aguafina Script',/*Aguafina Script*/'value' => 'Aguafina+Script'),
  array('label' => 'Aladin',/*Aladin*/'value' => 'Aladin'),
  array('label' => 'Aldrich',/*Aldrich*/'value' => 'Aldrich'),
  array('label' => 'Alice',/*Alice*/'value' => 'Alice'),
  array('label' => 'Alike Angular',/*Alike Angular*/'value' => 'Alike+Angular'),
  array('label' => 'Alike',/*Alike*/'value' => 'Alike'),
  array('label' => 'Allan',/*Allan*/'value' => 'Allan'),
  array('label' => 'Allerta Stencil',/*Allerta Stencil*/'value' => 'Allerta+Stencil'),
  array('label' => 'Allerta',/*Allerta*/'value' => 'Allerta'),
  array('label' => 'Amaranth',/*Amaranth*/'value' => 'Amaranth'),
  array('label' => 'Amatic SC',/*Amatic SC*/'value' => 'Amatic+SC'),
  array('label' => 'Andada',/*Andada*/'value' => 'Andada'),
  array('label' => 'Andika',/*Andika*/'value' => 'Andika'),
  array('label' => 'Annie Use Your Telescope',/*Annie Use Your Telescope*/'value' => 'Annie+Use+Your+Telescope'),
  array('label' => 'Anonymous Pro',/*Anonymous Pro*/'value' => 'Anonymous+Pro'),
  array('label' => 'Antic',/*Antic*/'value' => 'Antic'),
  array('label' => 'Anton',/*Anton*/'value' => 'Anton'),
  array('label' => 'Arapey',/*Arapey*/'value' => 'Arapey'),
  array('label' => 'Architects Daughter',/*Architects Daughter*/'value' => 'Architects+Daughter'),
  array('label' => 'Arimo',/*Arimo*/'value' => 'Arimo'),
  array('label' => 'Artifika',/*Artifika*/'value' => 'Artifika'),
  array('label' => 'Arvo',/*Arvo*/'value' => 'Arvo'),
  array('label' => 'Asset',/*Asset*/'value' => 'Asset'),
  array('label' => 'Astloch',/*Astloch*/'value' => 'Astloch'),
  array('label' => 'Atomic Age',/*Atomic Age*/'value' => 'Atomic+Age'),
  array('label' => 'Aubrey',/*Aubrey*/'value' => 'Aubrey'),
  array('label' => 'Bangers',/*Bangers*/'value' => 'Bangers'),
  array('label' => 'Bentham',/*Bentham*/'value' => 'Bentham'),
  array('label' => 'Bevan',/*Bevan*/'value' => 'Bevan'),
  array('label' => 'Bigshot One',/*Bigshot One*/'value' => 'Bigshot+One'),
  array('label' => 'Bitter',/*Bitter*/'value' => 'Bitter'),
  array('label' => 'Black Ops One',/*Black Ops One*/'value' => 'Black+Ops+One'),
  array('label' => 'Bowlby One SC',/*Bowlby One SC*/'value' => 'Bowlby+One+SC'),
  array('label' => 'Bowlby One',/*Bowlby One*/'value' => 'Bowlby+One'),
  array('label' => 'Brawler',/*Brawler*/'value' => 'Brawler'),
  array('label' => 'Bubblegum Sans',/*Bubblegum Sans*/'value' => 'Bubblegum+Sans'),
  array('label' => 'Buda',/*Buda*/'value' => 'Buda'),
  array('label' => 'Butcherman Caps',/*Butcherman Caps*/'value' => 'Butcherman+Caps'),
  array('label' => 'Cabin Condensed',/*Cabin Condensed*/'value' => 'Cabin+Condensed'),
  array('label' => 'Cabin Sketch',/*Cabin Sketch*/'value' => 'Cabin+Sketch'),
  array('label' => 'Cabin',/*Cabin*/'value' => 'Cabin'),
  array('label' => 'Cagliostro',/*Cagliostro*/'value' => 'Cagliostro'),
  array('label' => 'Calligraffitti',/*Calligraffitti*/'value' => 'Calligraffitti'),
  array('label' => 'Candal',/*Candal*/'value' => 'Candal'),
  array('label' => 'Cantarell',/*Cantarell*/'value' => 'Cantarell'),
  array('label' => 'Cardo',/*Cardo*/'value' => 'Cardo'),
  array('label' => 'Carme',/*Carme*/'value' => 'Carme'),
  array('label' => 'Carter One',/*Carter One*/'value' => 'Carter+One'),
  array('label' => 'Caudex',/*Caudex*/'value' => 'Caudex'),
  array('label' => 'Cedarville Cursive',/*Cedarville Cursive*/'value' => 'Cedarville+Cursive'),
  array('label' => 'Changa One',/*Changa One*/'value' => 'Changa+One'),
  array('label' => 'Cherry Cream Soda',/*Cherry Cream Soda*/'value' => 'Cherry+Cream+Soda'),
  array('label' => 'Chewy',/*Chewy*/'value' => 'Chewy'),
  array('label' => 'Chicle',/*Chicle*/'value' => 'Chicle'),
  array('label' => 'Chivo',/*Chivo*/'value' => 'Chivo'),
  array('label' => 'Coda Caption',/*Coda Caption*/'value' => 'Coda+Caption'),
  array('label' => 'Coda',/*Coda*/'value' => 'Coda'),
  array('label' => 'Comfortaa',/*Comfortaa*/'value' => 'Comfortaa'),
  array('label' => 'Coming Soon',/*Coming Soon*/'value' => 'Coming+Soon'),
  array('label' => 'Contrail One',/*Contrail One*/'value' => 'Contrail+One'),
  array('label' => 'Convergence',/*Convergence*/'value' => 'Convergence'),
  array('label' => 'Cookie',/*Cookie*/'value' => 'Cookie'),
  array('label' => 'Copse',/*Copse*/'value' => 'Copse'),
  array('label' => 'Corben',/*Corben*/'value' => 'Corben'),
  array('label' => 'Cousine',/*Cousine*/'value' => 'Cousine'),
  array('label' => 'Coustard',/*Coustard*/'value' => 'Coustard'),
  array('label' => 'Covered By Your Grace',/*Covered By Your Grace*/'value' => 'Covered+By+Your+Grace'),
  array('label' => 'Crafty Girls',/*Crafty Girls*/'value' => 'Crafty+Girls'),
  array('label' => 'Creepster Caps',/*Creepster Caps*/'value' => 'Creepster+Caps'),
  array('label' => 'Crimson Text',/*Crimson Text*/'value' => 'Crimson+Text'),
  array('label' => 'Crushed',/*Crushed*/'value' => 'Crushed'),
  array('label' => 'Cuprum',/*Cuprum*/'value' => 'Cuprum'),
  array('label' => 'Damion',/*Damion*/'value' => 'Damion'),
  array('label' => 'Dancing Script',/*Dancing Script*/'value' => 'Dancing+Script'),
  array('label' => 'Dawning of a New Day',/*Dawning of a New Day*/'value' => 'Dawning+of+a+New+Day'),
  array('label' => 'Days One',/*Days One*/'value' => 'Days+One'),
  array('label' => 'Delius Swash Caps',/*Delius Swash Caps*/'value' => 'Delius+Swash+Caps'),
  array('label' => 'Delius Unicase',/*Delius Unicase*/'value' => 'Delius+Unicase'),
  array('label' => 'Delius',/*Delius*/'value' => 'Delius'),
  array('label' => 'Devonshire',/*Devonshire*/'value' => 'Devonshire'),
  array('label' => 'Didact Gothic',/*Didact Gothic*/'value' => 'Didact+Gothic'),
  array('label' => 'Dorsa',/*Dorsa*/'value' => 'Dorsa'),
  array('label' => 'Dr Sugiyama',/*Dr Sugiyama*/'value' => 'Dr+Sugiyama'),
  array('label' => 'Droid Sans Mono',/*Droid Sans Mono*/'value' => 'Droid+Sans+Mono'),
  array('label' => 'Droid Sans',/*Droid Sans*/'value' => 'Droid+Sans'),
  array('label' => 'Droid Serif',/*Droid Serif*/'value' => 'Droid+Serif'),
  array('label' => 'EB Garamond',/*EB Garamond*/'value' => 'EB+Garamond'),
  array('label' => 'Eater Caps',/*Eater Caps*/'value' => 'Eater+Caps'),
  array('label' => 'Expletus Sans',/*Expletus Sans*/'value' => 'Expletus+Sans'),
  array('label' => 'Fanwood Text',/*Fanwood Text*/'value' => 'Fanwood+Text'),
  array('label' => 'Federant',/*Federant*/'value' => 'Federant'),
  array('label' => 'Federo',/*Federo*/'value' => 'Federo'),
  array('label' => 'Fjord One',/*Fjord One*/'value' => 'Fjord+One'),
  array('label' => 'Fondamento',/*Fondamento*/'value' => 'Fondamento'),
  array('label' => 'Fontdiner Swanky',/*Fontdiner Swanky*/'value' => 'Fontdiner+Swanky'),
  array('label' => 'Forum',/*Forum*/'value' => 'Forum'),
  array('label' => 'Francois One',/*Francois One*/'value' => 'Francois+One'),
  array('label' => 'Gentium Basic',/*Gentium Basic*/'value' => 'Gentium+Basic'),
  array('label' => 'Gentium Book Basic',/*Gentium Book Basic*/'value' => 'Gentium+Book+Basic'),
  array('label' => 'Geo',/*Geo*/'value' => 'Geo'),
  array('label' => 'Geostar Fill',/*Geostar Fill*/'value' => 'Geostar+Fill'),
  array('label' => 'Geostar',/*Geostar*/'value' => 'Geostar'),
  array('label' => 'Give You Glory',/*Give You Glory*/'value' => 'Give+You+Glory'),
  array('label' => 'Gloria Hallelujah',/*Gloria Hallelujah*/'value' => 'Gloria+Hallelujah'),
  array('label' => 'Goblin One',/*Goblin One*/'value' => 'Goblin+One'),
  array('label' => 'Gochi Hand',/*Gochi Hand*/'value' => 'Gochi+Hand'),
  array('label' => 'Goudy Bookletter 1911',/*Goudy Bookletter 1911*/'value' => 'Goudy+Bookletter+1911'),
  array('label' => 'Gravitas One',/*Gravitas One*/'value' => 'Gravitas+One'),
  array('label' => 'Gruppo',/*Gruppo*/'value' => 'Gruppo'),
  array('label' => 'Hammersmith One',/*Hammersmith One*/'value' => 'Hammersmith+One'),
  array('label' => 'Herr Von Muellerhoff',/*Herr Von Muellerhoff*/'value' => 'Herr+Von+Muellerhoff'),
  array('label' => 'Holtwood One SC',/*Holtwood One SC*/'value' => 'Holtwood+One+SC'),
  array('label' => 'Homemade Apple',/*Homemade Apple*/'value' => 'Homemade+Apple'),
  array('label' => 'IM Fell DW Pica SC',/*IM Fell DW Pica SC*/'value' => 'IM+Fell+DW+Pica+SC'),
  array('label' => 'IM Fell DW Pica',/*IM Fell DW Pica*/'value' => 'IM+Fell+DW+Pica'),
  array('label' => 'IM Fell Double Pica SC',/*IM Fell Double Pica SC*/'value' => 'IM+Fell+Double+Pica+SC'),
  array('label' => 'IM Fell Double Pica',/*IM Fell Double Pica*/'value' => 'IM+Fell+Double+Pica'),
  array('label' => 'IM Fell English SC',/*IM Fell English SC*/'value' => 'IM+Fell+English+SC'),
  array('label' => 'IM Fell English',/*IM Fell English*/'value' => 'IM+Fell+English'),
  array('label' => 'IM Fell French Canon SC',/*IM Fell French Canon SC*/'value' => 'IM+Fell+French+Canon+SC'),
  array('label' => 'IM Fell French Canon',/*IM Fell French Canon*/'value' => 'IM+Fell+French+Canon'),
  array('label' => 'IM Fell Great Primer SC',/*IM Fell Great Primer SC*/'value' => 'IM+Fell+Great+Primer+SC'),
  array('label' => 'IM Fell Great Primer',/*IM Fell Great Primer*/'value' => 'IM+Fell+Great+Primer'),
  array('label' => 'Iceland',/*Iceland*/'value' => 'Iceland'),
  array('label' => 'Inconsolata',/*Inconsolata*/'value' => 'Inconsolata'),
  array('label' => 'Indie Flower',/*Indie Flower*/'value' => 'Indie+Flower'),
  array('label' => 'Irish Grover',/*Irish Grover*/'value' => 'Irish+Grover'),
  array('label' => 'Istok Web',/*Istok Web*/'value' => 'Istok+Web'),
  array('label' => 'Jockey One',/*Jockey One*/'value' => 'Jockey+One'),
  array('label' => 'Josefin Sans',/*Josefin Sans*/'value' => 'Josefin+Sans'),
  array('label' => 'Josefin Slab',/*Josefin Slab*/'value' => 'Josefin+Slab'),
  array('label' => 'Judson',/*Judson*/'value' => 'Judson'),
  array('label' => 'Julee',/*Julee*/'value' => 'Julee'),
  array('label' => 'Jura',/*Jura*/'value' => 'Jura'),
  array('label' => 'Just Another Hand',/*Just Another Hand*/'value' => 'Just+Another+Hand'),
  array('label' => 'Just Me Again Down Here',/*Just Me Again Down Here*/'value' => 'Just+Me+Again+Down+Here'),
  array('label' => 'Kameron',/*Kameron*/'value' => 'Kameron'),
  array('label' => 'Kelly Slab',/*Kelly Slab*/'value' => 'Kelly+Slab'),
  array('label' => 'Kenia',/*Kenia*/'value' => 'Kenia'),
  array('label' => 'Knewave',/*Knewave*/'value' => 'Knewave'),
  array('label' => 'Kranky',/*Kranky*/'value' => 'Kranky'),
  array('label' => 'Kreon',/*Kreon*/'value' => 'Kreon'),
  array('label' => 'Kristi',/*Kristi*/'value' => 'Kristi'),
  array('label' => 'La Belle Aurore',/*La Belle Aurore*/'value' => 'La+Belle+Aurore'),
  array('label' => 'Lancelot',/*Lancelot*/'value' => 'Lancelot'),
  array('label' => 'Lato',/*Lato*/'value' => 'Lato'),
  array('label' => 'League Script',/*League Script*/'value' => 'League+Script'),
  array('label' => 'Leckerli One',/*Leckerli One*/'value' => 'Leckerli+One'),
  array('label' => 'Lekton',/*Lekton*/'value' => 'Lekton'),
  array('label' => 'Lemon',/*Lemon*/'value' => 'Lemon'),
  array('label' => 'Limelight',/*Limelight*/'value' => 'Limelight'),
  array('label' => 'Linden Hill',/*Linden Hill*/'value' => 'Linden+Hill'),
  array('label' => 'Lobster Two',/*Lobster Two*/'value' => 'Lobster+Two'),
  array('label' => 'Lobster',/*Lobster*/'value' => 'Lobster'),
  array('label' => 'Lora',/*Lora*/'value' => 'Lora'),
  array('label' => 'Love Ya Like A Sister',/*Love Ya Like A Sister*/'value' => 'Love+Ya+Like+A+Sister'),
  array('label' => 'Loved by the King',/*Loved by the King*/'value' => 'Loved+by+the+King'),
  array('label' => 'Luckiest Guy',/*Luckiest Guy*/'value' => 'Luckiest+Guy'),
  array('label' => 'Maiden Orange',/*Maiden Orange*/'value' => 'Maiden+Orange'),
  array('label' => 'Mako',/*Mako*/'value' => 'Mako'),
  array('label' => 'Marck Script',/*Marck Script*/'value' => 'Marck+Script'),
  array('label' => 'Marvel',/*Marvel*/'value' => 'Marvel'),
  array('label' => 'Mate SC',/*Mate SC*/'value' => 'Mate+SC'),
  array('label' => 'Mate',/*Mate*/'value' => 'Mate'),
  array('label' => 'Maven Pro',/*Maven Pro*/'value' => 'Maven+Pro'),
  array('label' => 'Meddon',/*Meddon*/'value' => 'Meddon'),
  array('label' => 'MedievalSharp',/*MedievalSharp*/'value' => 'MedievalSharp'),
  array('label' => 'Megrim',/*Megrim*/'value' => 'Megrim'),
  array('label' => 'Merienda One',/*Merienda One*/'value' => 'Merienda+One'),
  array('label' => 'Merriweather',/*Merriweather*/'value' => 'Merriweather'),
  array('label' => 'Metrophobic',/*Metrophobic*/'value' => 'Metrophobic'),
  array('label' => 'Michroma',/*Michroma*/'value' => 'Michroma'),
  array('label' => 'Miltonian Tattoo',/*Miltonian Tattoo*/'value' => 'Miltonian+Tattoo'),
  array('label' => 'Miltonian',/*Miltonian*/'value' => 'Miltonian'),
  array('label' => 'Miss Fajardose',/*Miss Fajardose*/'value' => 'Miss+Fajardose'),
  array('label' => 'Miss Saint Delafield',/*Miss Saint Delafield*/'value' => 'Miss+Saint+Delafield'),
  array('label' => 'Modern Antiqua',/*Modern Antiqua*/'value' => 'Modern+Antiqua'),
  array('label' => 'Molengo',/*Molengo*/'value' => 'Molengo'),
  array('label' => 'Monofett',/*Monofett*/'value' => 'Monofett'),
  array('label' => 'Monoton',/*Monoton*/'value' => 'Monoton'),
  array('label' => 'Monsieur La Doulaise',/*Monsieur La Doulaise*/'value' => 'Monsieur+La+Doulaise'),
  array('label' => 'Montez',/*Montez*/'value' => 'Montez'),
  array('label' => 'Mountains of Christmas',/*Mountains of Christmas*/'value' => 'Mountains+of+Christmas'),
  array('label' => 'Mr Bedford',/*Mr Bedford*/'value' => 'Mr+Bedford'),
  array('label' => 'Mr Dafoe',/*Mr Dafoe*/'value' => 'Mr+Dafoe'),
  array('label' => 'Mr De Haviland',/*Mr De Haviland*/'value' => 'Mr+De+Haviland'),
  array('label' => 'Mrs Sheppards',/*Mrs Sheppards*/'value' => 'Mrs+Sheppards'),
  array('label' => 'Muli',/*Muli*/'value' => 'Muli'),
  array('label' => 'Neucha',/*Neucha*/'value' => 'Neucha'),
  array('label' => 'Neuton',/*Neuton*/'value' => 'Neuton'),
  array('label' => 'News Cycle',/*News Cycle*/'value' => 'News+Cycle'),
  array('label' => 'Niconne',/*Niconne*/'value' => 'Niconne'),
  array('label' => 'Nixie One',/*Nixie One*/'value' => 'Nixie+One'),
  array('label' => 'Nobile',/*Nobile*/'value' => 'Nobile'),
  array('label' => 'Nosifer Caps',/*Nosifer Caps*/'value' => 'Nosifer+Caps'),
  array('label' => 'Nothing You Could Do',/*Nothing You Could Do*/'value' => 'Nothing+You+Could+Do'),
  array('label' => 'Nova Cut',/*Nova Cut*/'value' => 'Nova+Cut'),
  array('label' => 'Nova Flat',/*Nova Flat*/'value' => 'Nova+Flat'),
  array('label' => 'Nova Mono',/*Nova Mono*/'value' => 'Nova+Mono'),
  array('label' => 'Nova Oval',/*Nova Oval*/'value' => 'Nova+Oval'),
  array('label' => 'Nova Round',/*Nova Round*/'value' => 'Nova+Round'),
  array('label' => 'Nova Script',/*Nova Script*/'value' => 'Nova+Script'),
  array('label' => 'Nova Slim',/*Nova Slim*/'value' => 'Nova+Slim'),
  array('label' => 'Nova Square',/*Nova Square*/'value' => 'Nova+Square'),
  array('label' => 'Numans',/*Numans*/'value' => 'Numans'),
  array('label' => 'Nunito',/*Nunito*/'value' => 'Nunito'),
  array('label' => 'Old Standard TT',/*Old Standard TT*/'value' => 'Old+Standard+TT'),
  array('label' => 'Open Sans Condensed',/*Open Sans Condensed*/'value' => 'Open+Sans+Condensed'),
  array('label' => 'Open Sans',/*Open Sans*/'value' => 'Open+Sans'),
  array('label' => 'Orbitron',/*Orbitron*/'value' => 'Orbitron'),
  array('label' => 'Oswald',/*Oswald*/'value' => 'Oswald'),
  array('label' => 'Over the Rainbow',/*Over the Rainbow*/'value' => 'Over+the+Rainbow'),
  array('label' => 'Ovo',/*Ovo*/'value' => 'Ovo'),
  array('label' => 'PT Sans Caption',/*PT Sans Caption*/'value' => 'PT+Sans+Caption'),
  array('label' => 'PT Sans Narrow',/*PT Sans Narrow*/'value' => 'PT+Sans+Narrow'),
  array('label' => 'PT Sans',/*PT Sans*/'value' => 'PT+Sans'),
  array('label' => 'PT Serif Caption',/*PT Serif Caption*/'value' => 'PT+Serif+Caption'),
  array('label' => 'PT Serif',/*PT Serif*/'value' => 'PT+Serif'),
  array('label' => 'Pacifico',/*Pacifico*/'value' => 'Pacifico'),
  array('label' => 'Passero One',/*Passero One*/'value' => 'Passero+One'),
  array('label' => 'Patrick Hand',/*Patrick Hand*/'value' => 'Patrick+Hand'),
  array('label' => 'Paytone One',/*Paytone One*/'value' => 'Paytone+One'),
  array('label' => 'Permanent Marker',/*Permanent Marker*/'value' => 'Permanent+Marker'),
  array('label' => 'Petrona',/*Petrona*/'value' => 'Petrona'),
  array('label' => 'Philosopher',/*Philosopher*/'value' => 'Philosopher'),
  array('label' => 'Piedra',/*Piedra*/'value' => 'Piedra'),
  array('label' => 'Pinyon Script',/*Pinyon Script*/'value' => 'Pinyon+Script'),
  array('label' => 'Play',/*Play*/'value' => 'Play'),
  array('label' => 'Playfair Display',/*Playfair Display*/'value' => 'Playfair+Display'),
  array('label' => 'Podkova',/*Podkova*/'value' => 'Podkova'),
  array('label' => 'Poller One',/*Poller One*/'value' => 'Poller+One'),
  array('label' => 'Poly',/*Poly*/'value' => 'Poly'),
  array('label' => 'Pompiere',/*Pompiere*/'value' => 'Pompiere'),
  array('label' => 'Prata',/*Prata*/'value' => 'Prata'),
  array('label' => 'Prociono',/*Prociono*/'value' => 'Prociono'),
  array('label' => 'Puritan',/*Puritan*/'value' => 'Puritan'),
  array('label' => 'Quattrocento Sans',/*Quattrocento Sans*/'value' => 'Quattrocento+Sans'),
  array('label' => 'Quattrocento',/*Quattrocento*/'value' => 'Quattrocento'),
  array('label' => 'Questrial',/*Questrial*/'value' => 'Questrial'),
  array('label' => 'Quicksand',/*Quicksand*/'value' => 'Quicksand'),
  array('label' => 'Radley',/*Radley*/'value' => 'Radley'),
  array('label' => 'Raleway',/*Raleway*/'value' => 'Raleway'),
  array('label' => 'Rammetto One',/*Rammetto One*/'value' => 'Rammetto+One'),
  array('label' => 'Rancho',/*Rancho*/'value' => 'Rancho'),
  array('label' => 'Rationale',/*Rationale*/'value' => 'Rationale'),
  array('label' => 'Redressed',/*Redressed*/'value' => 'Redressed'),
  array('label' => 'Reenie Beanie',/*Reenie Beanie*/'value' => 'Reenie+Beanie'),
  array('label' => 'Ribeye Marrow',/*Ribeye Marrow*/'value' => 'Ribeye+Marrow'),
  array('label' => 'Ribeye',/*Ribeye*/'value' => 'Ribeye'),
  array('label' => 'Righteous',/*Righteous*/'value' => 'Righteous'),
  array('label' => 'Rochester',/*Rochester*/'value' => 'Rochester'),
  array('label' => 'Rock Salt',/*Rock Salt*/'value' => 'Rock+Salt'),
  array('label' => 'Rokkitt',/*Rokkitt*/'value' => 'Rokkitt'),
  array('label' => 'Rosario',/*Rosario*/'value' => 'Rosario'),
  array('label' => 'Ruslan Display',/*Ruslan Display*/'value' => 'Ruslan+Display'),
  array('label' => 'Salsa',/*Salsa*/'value' => 'Salsa'),
  array('label' => 'Sancreek',/*Sancreek*/'value' => 'Sancreek'),
  array('label' => 'Sansita One',/*Sansita One*/'value' => 'Sansita+One'),
  array('label' => 'Satisfy',/*Satisfy*/'value' => 'Satisfy'),
  array('label' => 'Schoolbell',/*Schoolbell*/'value' => 'Schoolbell'),
  array('label' => 'Shadows Into Light',/*Shadows Into Light*/'value' => 'Shadows+Into+Light'),
  array('label' => 'Shanti',/*Shanti*/'value' => 'Shanti'),
  array('label' => 'Short Stack',/*Short Stack*/'value' => 'Short+Stack'),
  array('label' => 'Sigmar One',/*Sigmar One*/'value' => 'Sigmar+One'),
  array('label' => 'Signika Negative',/*Signika Negative*/'value' => 'Signika+Negative'),
  array('label' => 'Signika',/*Signika*/'value' => 'Signika'),
  array('label' => 'Six Caps',/*Six Caps*/'value' => 'Six+Caps'),
  array('label' => 'Slackey',/*Slackey*/'value' => 'Slackey'),
  array('label' => 'Smokum',/*Smokum*/'value' => 'Smokum'),
  array('label' => 'Smythe',/*Smythe*/'value' => 'Smythe'),
  array('label' => 'Sniglet',/*Sniglet*/'value' => 'Sniglet'),
  array('label' => 'Snippet',/*Snippet*/'value' => 'Snippet'),
  array('label' => 'Sorts Mill Goudy',/*Sorts Mill Goudy*/'value' => 'Sorts+Mill+Goudy'),
  array('label' => 'Special Elite',/*Special Elite*/'value' => 'Special+Elite'),
  array('label' => 'Spinnaker',/*Spinnaker*/'value' => 'Spinnaker'),
  array('label' => 'Spirax',/*Spirax*/'value' => 'Spirax'),
  array('label' => 'Stardos Stencil',/*Stardos Stencil*/'value' => 'Stardos+Stencil'),
  array('label' => 'Sue Ellen Francisco',/*Sue Ellen Francisco*/'value' => 'Sue+Ellen+Francisco'),
  array('label' => 'Sunshiney',/*Sunshiney*/'value' => 'Sunshiney'),
  array('label' => 'Supermercado One',/*Supermercado One*/'value' => 'Supermercado+One'),
  array('label' => 'Swanky and Moo Moo',/*Swanky and Moo Moo*/'value' => 'Swanky+and+Moo+Moo'),
  array('label' => 'Syncopate',/*Syncopate*/'value' => 'Syncopate'),
  array('label' => 'Tangerine',/*Tangerine*/'value' => 'Tangerine'),
  array('label' => 'Tenor Sans',/*Tenor Sans*/'value' => 'Tenor+Sans'),
  array('label' => 'Terminal Dosis',/*Terminal Dosis*/'value' => 'Terminal+Dosis'),
  array('label' => 'The Girl Next Door',/*The Girl Next Door*/'value' => 'The+Girl+Next+Door'),
  array('label' => 'Tienne',/*Tienne*/'value' => 'Tienne'),
  array('label' => 'Tinos',/*Tinos*/'value' => 'Tinos'),
  array('label' => 'Tulpen One',/*Tulpen One*/'value' => 'Tulpen+One'),
  array('label' => 'Ubuntu Condensed',/*Ubuntu Condensed*/'value' => 'Ubuntu+Condensed'),
  array('label' => 'Ubuntu Mono',/*Ubuntu Mono*/'value' => 'Ubuntu+Mono'),
  array('label' => 'Ubuntu',/*Ubuntu*/'value' => 'Ubuntu'),
  array('label' => 'Ultra',/*Ultra*/'value' => 'Ultra'),
  array('label' => 'UnifrakturCook',/*UnifrakturCook*/'value' => 'UnifrakturCook'),
  array('label' => 'UnifrakturMaguntia',/*UnifrakturMaguntia*/'value' => 'UnifrakturMaguntia'),
  array('label' => 'Unkempt',/*Unkempt*/'value' => 'Unkempt'),
  array('label' => 'Unlock',/*Unlock*/'value' => 'Unlock'),
  array('label' => 'Unna',/*Unna*/'value' => 'Unna'),
  array('label' => 'VT323',/*VT323*/'value' => 'VT323'),
  array('label' => 'Varela Round',/*Varela Round*/'value' => 'Varela+Round'),
  array('label' => 'Varela',/*Varela*/'value' => 'Varela'),
  array('label' => 'Vast Shadow',/*Vast Shadow*/'value' => 'Vast+Shadow'),
  array('label' => 'Vibur',/*Vibur*/'value' => 'Vibur'),
  array('label' => 'Vidaloka',/*Vidaloka*/'value' => 'Vidaloka'),
  array('label' => 'Volkhov',/*Volkhov*/'value' => 'Volkhov'),
  array('label' => 'Vollkorn',/*Vollkorn*/'value' => 'Vollkorn'),
  array('label' => 'Voltaire',/*Voltaire*/'value' => 'Voltaire'),
  array('label' => 'Waiting for the Sunrise',/*Waiting for the Sunrise*/'value' => 'Waiting+for+the+Sunrise'),
  array('label' => 'Wallpoet',/*Wallpoet*/'value' => 'Wallpoet'),
  array('label' => 'Walter Turncoat',/*Walter Turncoat*/'value' => 'Walter+Turncoat'),
  array('label' => 'Wire One',/*Wire One*/'value' => 'Wire+One'),
  array('label' => 'Yanone Kaffeesatz',/*Yanone Kaffeesatz*/'value' => 'Yanone+Kaffeesatz'),
  array('label' => 'Yellowtail',/*Yellowtail*/'value' => 'Yellowtail'),
  array('label' => 'Yeseva One',/*Yeseva One*/'value' => 'Yeseva+One'),
  array('label' => 'Zeyada',/*Zeyada*/'value' => 'Zeyada')
);

/**
 * Initialize the options before anything else.
 */
add_action( 'admin_init', 'custom_theme_options', 1 );

/**
 * Build the custom settings & update OptionTree.
 */
function custom_theme_options() {
  /**
   * Get a copy of the saved settings array. 
   */
  $saved_settings = get_option( 'option_tree_settings', array() );

  global $google_array;
  
  /**
   * Custom settings array that will eventually be 
   * passes to the OptionTree Settings API Class.
   */
  $custom_settings = array( 
    'contextual_help' => array(
      'content'       => array( 
        array(
          'id'        => 'general_help',
          'title'     => 'General',
          'content'   => '<p>Help content goes here!</p>'
        )
      ),
      'sidebar'       => '<p>Sidebar content goes here!</p>'
    ),
    'sections'        => array( 
      array(
        'id'          => 'general',
        'title'       => 'General'
      ),
      array(
        'id'          => 'colors',
        'title'       => 'Colors'
      ),
      array(
        'id'          => 'typography',
        'title'       => 'Typography'
      ),
      array(
        'id'          => 'contact',
        'title'       => 'Contact'
      ),
      array(
        'id'          => 'sidebars',
        'title'       => 'Sidebars'
      )
    ),
    'settings'        => array( 
      array(
        'id'          => 'rb_logo',
        'label'       => 'Logo',
        'desc'        => 'Upload a transparent .png file for the logo.',
        'std'         => '',
        'type'        => 'upload',
        'section'     => 'general',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_favicon',
        'label'       => 'Favicon',
        'desc'        => 'Upload a 16x16 .ico file for the favicon.',
        'std'         => '',
        'type'        => 'upload',
        'section'     => 'general',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_portfolio_page_link',
        'label'       => 'Portfolio page',
        'desc'        => 'Please select the page that you\'ve used for the portfolio page template.',
        'std'         => '',
        'type'        => 'page-select',
        'section'     => 'general',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_custom_css',
        'label'       => 'Custom CSS',
        'desc'        => 'Write any custom css here. Please don\'t change theme files, because you won\'t be able to easily update in the future.',
        'std'         => '',
        'type'        => 'textarea-simple',
        'section'     => 'general',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_tracking_where',
        'label'       => 'Analytics location',
        'desc'        => 'Please choose a location for your analytics code.',
        'std'         => 'footer',
        'type'        => 'select',
        'section'     => 'general',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => '',
        'choices'     => array(
          array(
            'label'   => 'Header (inside the <head> element)',
            'value'   => 'head'
          ),
          array(
            'label'   => 'Footer (at the bottom of the <body> element)',
            'value'   => 'footer'
          )
        )
      ),
      array(
        'id'          => 'rb_tracking',
        'label'       => 'Analytics code',
        'desc'        => 'Put your Analytics code inside here. Make sure you include the entire script, not just your ID.',
        'std'         => '',
        'type'        => 'textarea-simple',
        'section'     => 'general',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_colors_text',
        'label'       => 'About the colors',
        'desc'        => 'These are the colors of the typography elements. If you want further color tweaking, please add your own css rules in the custom css panel, or in a child theme.',
        'std'         => '',
        'type'        => 'textblock',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_body',
        'label'       => 'Body color',
        'desc'        => 'Choose a color for the body. This color will be used in text and other titles as a default color.',
        'std'         => '#555555',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_menu',
        'label'       => 'Menu color',
        'desc'        => 'Choose a color for the menu\'s links hovers/selected states.',
        'std'         => '#86acc4',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_accent',
        'label'       => 'Color accent',
        'desc'        => 'Choose a color for the main color accent, which is mainly used in links, but also in title hovers.',
        'std'         => '#6b99b6',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_hover',
        'label'       => 'Links hover',
        'desc'        => 'Choose a color for the default link\'s hover. Actually, the links which have the color stated above will hover into this link(so it applies only for basic links).',
        'std'         => '#b66b79',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_meta',
        'label'       => 'Meta color #1',
        'desc'        => 'Choose a color for some meta text areas(like footer spans).',
        'std'         => '#899096',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_meta2',
        'label'       => 'Meta color #2',
        'desc'        => 'Another "meta" color, used for blockquotes, some input areas and some other spans from various shortcodes.',
        'std'         => '#999999',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_footer',
        'label'       => 'Footer color #1',
        'desc'        => 'Choose a color for the footer text. Will also be used on some forms.',
        'std'         => '#c9c9c9',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_color_footer2',
        'label'       => 'Footer color #2',
        'desc'        => 'Choose a color for the copyright link and other stuff inside the footer area(like the contact form).',
        'std'         => '#bfbfbf',
        'type'        => 'colorpicker',
        'section'     => 'colors',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_font_text',
        'label'       => 'About the fonts',
        'desc'        => 'Support for Google Fonts is limited and experimental. Because the list is so long, not all fonts were properly tested, so if a font isn\'t working, please report it and i will get it off the list (there is nothing you can do for fonts that are not working, so just find a good font that works).',
        'std'         => '',
        'type'        => 'textblock',
        'section'     => 'typography',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_font_headings',
        'label'       => 'Headings',
        'desc'        => 'Choose a font for all of your headings(h1-h6).',
        'std'         => 'Ubuntu',
        'type'        => 'select',
        'section'     => 'typography',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => '',
        'choices'     => $google_array
      ),
      array(
        'id'          => 'rb_font_body',
        'label'       => 'Body',
        'desc'        => 'Choose a font for all the body text.',
        'std'         => 'Droid+Sans',
        'type'        => 'select',
        'section'     => 'typography',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => '',
        'choices'     => $google_array
      ),
      array(
        'id'          => 'rb_contact_text',
        'label'       => 'About the form',
        'desc'        => 'This area controls the contact form from your contact page template. This theme allows you to use a contact form in the contact page and one in the footer(both with the same email address). For more forms(and more complex) you should use a popular plugin.',
        'std'         => '',
        'type'        => 'textblock',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_contact_email_address',
        'label'       => 'Email address',
        'desc'        => 'Enter a valid email that will be used for the forms available in this theme by default.',
        'std'         => 'your@email.com',
        'type'        => 'text',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_contact_name',
        'label'       => 'Name label',
        'desc'        => 'Write a label for the name input field.',
        'std'         => 'Name (Required)',
        'type'        => 'text',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_contact_email',
        'label'       => 'Email label',
        'desc'        => 'Write a label for the email input field.',
        'std'         => 'Email (Required)',
        'type'        => 'text',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_contact_subject',
        'label'       => 'Subject label',
        'desc'        => 'Write a label for the subject input field.',
        'std'         => 'Subject',
        'type'        => 'text',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_contact_submit',
        'label'       => 'Submit label',
        'desc'        => 'Write a label for the submit button.',
        'std'         => 'Submit',
        'type'        => 'text',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_contact_response_good',
        'label'       => 'Received message',
        'desc'        => 'Write a message to be displayed when the email was sent.',
        'std'         => 'Thank you. Your messsage has been received.',
        'type'        => 'text',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_contact_response_bad',
        'label'       => 'Failed message',
        'desc'        => 'Write a message to be displayed when the email was not sent.',
        'std'         => 'Error. Please try again.',
        'type'        => 'text',
        'section'     => 'contact',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'id'          => 'rb_sidebars_text',
        'label'       => 'About the sidebars',
        'desc'        => 'All sidebars that you create here will appear both in the Widgets Page(Appearance > Widgets), from where you\'ll have to configure them(put widgets inside them), and in the custom pages(default templates), where you\'ll be able to choose a sidebar for each page',
        'std'         => '',
        'type'        => 'textblock',
        'section'     => 'sidebars',
        'rows'        => '',
        'post_type'   => '',
        'taxonomy'    => '',
        'class'       => ''
      ),
      array(
        'label'       => 'Create Sidebars',
        'id'          => 'rb_sidebars',
        'type'        => 'list-item',
        'desc'        => 'Please choose a unique title for each sidebar!',
        'section'     => 'sidebars',
        'settings'    => array(
          array(
            'label'       => 'ID',
            'id'          => 'id',
            'type'        => 'text',
            'desc'        => 'Please write a lowercase id, with NO SPACES!!!',
            'std'         => '',
            'rows'        => '',
            'post_type'   => '',
            'taxonomy'    => '',
            'class'       => ''
          )
        )
      )
    )
  );
   
  /* settings are not the same update the DB */
  if ( $saved_settings !== $custom_settings ) {
    update_option( 'option_tree_settings', $custom_settings ); 
  }
  
}

?>